name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_run:
    workflows:
      - version_up
    types: [completed]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13]
        goos: [linux, darwin]
        goarch: [amd64, arm64]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            artifact_name: dist-linux-amd64
            build_deps: sudo apt-get -qq update && sudo apt-get install -y --no-install-recommends build-essential
          - os: macos-13
            goos: darwin
            goarch: amd64
            artifact_name: dist-darwin-amd64
            build_deps: brew install coreutils
          - os: windows-latest
            goos: windows
            goarch: amd64
            artifact_name: dist-windows-amd64
            build_deps: choco install zip

    steps:
      - name: Install build dependencies
        run: ${{ matrix.build_deps }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Build
        env:
          CGO_ENABLED: 1
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          CURRENT_REVISION=${{ github.sha }}
          VERSION=${{ github.ref_name }}
          BIN=mdefaults
          go build -ldflags="-s -w -X main.revision=${CURRENT_REVISION}" -o ${BIN} .
          zip -r mdefaults-${{ matrix.goos}}-${{ matrix.goarch}}-${VERSION}.zip ${BIN}
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mdefaults-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.ref_name }}
          path: mdefaults-${{ matrix.goos }}-*.zip

  release:
    name: Draft Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: mdefaults-${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          generate_release_notes: true
          files: dist-*/mdefaults*.*

